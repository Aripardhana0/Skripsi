import tkinter as tk
from tkinter import ttk
import cv2
from PIL import Image, ImageTk

class CameraApp:
    cap = cv2.VideoCapture(1)
    def __init__(self, root):
        self.root = root
        self.root.title("Camera App")

        self.frame = tk.Frame(self.root)
        self.frame.pack(padx=10, pady=10)
        
        self.camera_label = ttk.Label(self.root, text="Camera View")
        self.camera_label.pack(side="left", padx=10, pady=10)
        
        self.mask_label = ttk.Label(self.root, text="Mask View")
        self.mask_label.pack(side="left", padx=10, pady=10)
        
        self.hue_slider = ttk.Scale(self.root, from_=0, to=255, orient="horizontal", length=200)
        self.hue_slider.pack(padx=10, pady=5)
        
        self.saturation_slider = ttk.Scale(self.root, from_=0, to=255, orient="horizontal", length=200)
        self.saturation_slider.pack(padx=10, pady=5)
        
        self.value_slider = ttk.Scale(self.root, from_=0, to=255, orient="horizontal", length=200)
        self.value_slider.pack(padx=10, pady=5)
        
        self.buttons_frame = ttk.Frame(self.root)
        self.buttons_frame.pack(padx=10, pady=20)
        
        self.white_button = ttk.Button(self.buttons_frame, text="Putih", command=self.set_white)
        self.white_button.pack(side="left", padx=5)
        
        self.black_button = ttk.Button(self.buttons_frame, text="Hitam", command=self.set_black)
        self.black_button.pack(side="left", padx=5)
        
        self.gray_button = ttk.Button(self.buttons_frame, text="Abu", command=self.set_gray)
        self.gray_button.pack(side="left", padx=5)
        
        self.brown_button = ttk.Button(self.buttons_frame, text="Coklat", command=self.set_brown)
        self.brown_button.pack(side="left", padx=5)
        
        self.buttons = [self.white_button, self.black_button, self.gray_button, self.brown_button]
        
        self.start_button = ttk.Button(self.frame, text="Start", command=self.show_camera)
        self.start_button.pack(side="left")

        self.disable_buttons()
        self.is_camera_running = False


    def start_camera(self):
        if not self.is_camera_running:
            self.is_camera_running = True
            self.start_button.config(state="disabled")
            self.show_camera()
        
            
    def show_camera(self):
        ret, frame = self.capture.read()
        if ret:
            frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
            image = Image.fromarray(frame)
            photo = ImageTk.PhotoImage(image=image)
            self.video_label.configure(image=photo)
            self.video_label.image = photo
            if self.is_camera_running:
                self.video_label.after(10, self.show_camera)
        else:
            self.is_camera_running = False
            self.start_button.config(state="normal")
        
    def set_white(self):
        self.disable_buttons()
        # Logic to set the mask and update views
        
    def set_black(self):
        self.disable_buttons()
        # Logic to set the mask and update views
        
    def set_gray(self):
        self.disable_buttons()
        # Logic to set the mask and update views
        
    def set_brown(self):
        self.disable_buttons()
        # Logic to set the mask and update views
        
    def disable_buttons(self):
        for button in self.buttons:
            button.config(state="normal")
        
if __name__ == "__main__":
    root = tk.Tk()
    app = CameraApp(root)
    root.mainloop()
