import tkinter as tk
from tkinter import ttk
import cv2
from PIL import Image, ImageTk

class CameraApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Camera App")
        
        self.capture = cv2.VideoCapture(0)
        # Declare the width and height in variables
        # width, height = 100, 100
        
        # Set the width and height
        self.capture.set(cv2.CAP_PROP_FRAME_WIDTH, 300)
        self.capture.set(cv2.CAP_PROP_FRAME_HEIGHT, 300)
        
        self.frame = tk.Frame(self.root)
        self.frame.pack(padx=10, pady=10)
        
        self.start_button = ttk.Button(self.frame, text="Start", command=self.start_camera)
        self.start_button.pack(side="right")
        
        self.slider = ttk.Scale(self.frame, from_=1, to=10, orient="horizontal")
        self.slider.set(5)  # Default value
        self.slider.pack(side="right", pady=10)

        self.hue_slider = ttk.Scale(self.root, from_=0, to=255, orient="horizontal", length=200)
        self.hue_slider.pack(padx=10, pady=5)
        
        self.saturation_slider = ttk.Scale(self.root, from_=0, to=255, orient="horizontal", length=200)
        self.saturation_slider.pack(padx=10, pady=5)
        
        self.value_slider = ttk.Scale(self.root, from_=0, to=255, orient="horizontal", length=200)
        self.value_slider.pack(padx=10, pady=5)
        
        self.submit_button = ttk.Button(self.frame, text="Submit", command=self.submit_value)
        self.submit_button.pack(side="right")
        
        self.video_label = ttk.Label(self.frame)
        self.video_label.pack()
        
        self.is_camera_running = True
       
        
    def start_camera(self):
        if not self.is_camera_running:
            self.is_camera_running = True
            self.start_button.config(state="disabled")
            self.show_camera()
            
    def show_camera(self):
        ret, frame = self.capture.read()
        if ret:
            frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
            image = Image.fromarray(frame)
            photo = ImageTk.PhotoImage(image=image)
            self.video_label.configure(image=photo)
            self.video_label.image = photo
            if self.is_camera_running:
                self.video_label.after(10, self.show_camera)
        else:
            self.is_camera_running = False
            self.start_button.config(state="normal")
    
    def submit_value(self):
        slider_value = self.slider.get()
        print(f"Slider value submitted: {slider_value}")

if __name__ == "__main__":
    root = tk.Tk()
    app = CameraApp(root)
    root.mainloop()
